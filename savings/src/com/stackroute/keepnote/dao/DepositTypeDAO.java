package com.stackroute.keepnote.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.stackroute.keepnote.dto.CommonResponse;
import com.stackroute.keepnote.dto.DepositDto;
import com.stackroute.keepnote.dto.DepositsSuccess;
import com.stackroute.keepnote.dto.InterestDto;
import com.stackroute.keepnote.dto.LedgerSummaryDto;
import com.stackroute.keepnote.dto.LoanDtoList;
import com.stackroute.keepnote.dto.MonthlyLoansSummaryDto;
import com.stackroute.keepnote.dto.OccurranceDto;
import com.stackroute.keepnote.dto.PdfDto;
import com.stackroute.keepnote.model.Customer;
import com.stackroute.keepnote.model.DepositType;
import com.stackroute.keepnote.model.Deposits;
import com.stackroute.keepnote.model.Expenses;
import com.stackroute.keepnote.model.Institution;
import com.stackroute.keepnote.model.InterestType;
import com.stackroute.keepnote.model.Interests;
import com.stackroute.keepnote.model.Ledger;
import com.stackroute.keepnote.model.Loans;
import com.stackroute.keepnote.model.MenuMaster;
import com.stackroute.keepnote.model.Occurrance;
import com.stackroute.keepnote.model.OtherIncome;
import com.stackroute.keepnote.model.Otp;
import com.stackroute.keepnote.model.Receipt;
import com.stackroute.keepnote.model.Role;
import com.stackroute.keepnote.model.SpecialLoan;

public interface DepositTypeDAO {
	public Occurrance getActiveOccurranceForSheduedMsg(String statusId, int tranId, long instId);
	public String configureOcc(long instId);
	public Receipt searchRid(long custmerId,long occuyrranceId,long instId);
	public long updateReceipt(long rid,String transactionIds,String type,long instId);
	public long saveReceipt(Customer c,String TransactionIds,long userId,long instId);
	public String msgText(String customerName,long customerId,long instId);
	public Otp getOtpObj(long userId,int statusId,long instid);
	public Otp getOtpStatus(long userId,int statusId,long instid);
	public void updateObj(Object obj);
	public long saveObj(Object obj);
	//public void sendSMS(String toNumber,String msg);
	public Institution getInstitution(long id);
	public List<DepositType> saveDepositType(DepositType depositType,long userId,long institutionId);
	public CommonResponse saveOccurance(OccurranceDto occurancedto,long userId,long institutionId);
	public List<DepositsSuccess> saveDeposits(List<DepositDto> deposits,long userId,long institutionId);
	public CommonResponse searchOccurance(long custId,long institutionId);
	public CommonResponse updateOccurance(OccurranceDto occurrancedto,long institutionId);
	public CommonResponse getLoanDetails(long custId,long institutionId);
	public CommonResponse getSpecialLoanDetails(long custId,long institutionId);
	public List<SpecialLoan> getSpecialLoans(long institutionId);
	public CommonResponse saveloans(LoanDtoList loanDto,long userId,long institutionId);
	public CommonResponse saveSpecialloans(LoanDtoList loanDto,long userId,long institutionId);
	public CommonResponse saveInterestType(InterestType interestType,long institutionId);
	public List<Interests> saveInterests(InterestDto interests,long institutionId);
	public List<InterestType> getInterestTypeList(long id);
	public List<Occurrance> getOccuranceList(long institutionId);
	public List<MonthlyLoansSummaryDto> getMonthlyLoanSummaryList(long occuranceId,long institutionId);
	public Map<Long,String> getOccuranceIds(int tranId,long instId);
	public Occurrance getActiveOccurrance(int statusId,int tranId,long instId);
	public InterestType getInterestTypeByTransactionType(long transactionType,int status,long instiid);
	public LedgerSummaryDto getLedgerSummary(long institutionId);
	public CommonResponse settle(long institutionId);
	public List<Deposits> getMonthlyDepositsSummaryList(long fromoccuranceId,long toOccuranceId, long institutionId);
	public String getPdfGenerator(String servletContext,long instId);
	public List<PdfDto> personalSummary(long fromOccurranceId,long toOccurranceId,long InstitutionId);
	public List<AuditDto> auditSummary(long fromOccurranceId,long toOccurranceId,long InstitutionId);
	public CommonResponse saveExpenses(Expenses ex,long userId,long InstitutionId);
	public List<Expenses> getExpenseDetails(long ledgerId,long instid);
	public Ledger getActiveLedger(int ledgerStatusId, long instid);
	public List<Expenses> getExpenseByLedger(long ledgerId, long instid);
	public String countDownTime(Date time,int exHours);
	public List<Loans> getLoans(long institutionId);
	public List<Customer> getCustomerList(int status,long institutionId);
	public Customer getCustomer(long customerId,int statusId,long institutionId);
	public List<Loans> getLoanByCustomer(long customerId,long institutionId);
	public SpecialLoan getSpecialLoanByCust(long custId,long institutionId);
	public Occurrance getFirstOccurance(long instId);
	public Loans getLoanByCust(long customerId,long institutionId);
	public List<MonthlyLoansSummaryDto> getMonthlyLoanSummaryList(long fromoccuranceId, long tooccuranceId,
			long institutionId);
	//public String sendSMS(String ACCOUNT_SID, String AUTH_TOKEN,String from,String to,String msg);
	public CommonResponse saveOtherIncome(OtherIncome ex, long userId, long InstitutionId);
	public List<OtherIncome> getOtherIncomeByLedger(long ledgerId, long instid);
	public CommonResponse rollback(long custId, long institutionId);
	public CommonResponse rollbackLoans(long custId, long institutionId);
	public CommonResponse rollbackSpLoans(long custId, long institutionId);
	public Expenses getExpenseByUid(long id, long instid);
	public List<OtherIncome> getOtherIncomeDetails(long ledgerId, long instid);

}
